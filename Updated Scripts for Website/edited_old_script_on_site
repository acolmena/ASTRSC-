/* Author: Zineb Oulmakki*/
jQuery(document).ready(function ($) {
  const whitelistArray = [
    "African studies",
    "African Union",
    "South Africa",
    "South African",
    "South Africans",
    "West Africa",
    "North Africa",
    "East Africa",
    "Southern Africa",
  ];

  const archaismArray = [
    "ancestral",
    "archaic",
    "barbaric",
    "exotic",
    "exotica",
    "primitive",
    "savage",
    "third world",
    "traditional",
    "underdeveloped",
    "native",
    "wild",
    "witchcraft",
  ];

  const tribalismArray = [
    "ethnic",
    "cultural",
    "tribalism",
    "nomadic",
    "ethnicism",
    "bushmen",
    "tribe",
    "pygmy",
    "ethnicity",
    "tribal",
    "entno",
    "tribalistic",
  ];

  const corruptionArray = [
    "violence",
    "conflict",
    "war",
    "atrocious",
    "atrocity",
    "crime",
    "violent",
    "weapon",
    "insurgency",
    "insurgent",
    "insurgence",
    "chaos",
    "chaotic",
    "arm",
    "terror",
    "flee",
    "militia",
    "outbreak",
    "crisis",
    "brutal",
    "collapse",
    "tension",
    "rebel",
    "genocide",
    "tension",
    "clash",
    "dead",
    "eruption",
    "criminal",
    "terrorism",
    "extremist",
    "abuse",
    "escalation",
    "escalate",
    "rape",
    "sanction",
    "corruption",
    "corrupt",
    "radical",
    "ban",
    "bomb",
    "blood",
    "cease-fire",
    "coup",
    "assault",
    "kidnap",
    "battle",
  ];

  const generalizationArray = [
    "africa",
    "subsaharan africa",
    "african",
    "continent",
    "sub-saharan africa",
  ];

  const lightArray = [
    "sun",
    "sunlight",
    "sunrise",
    "sunset",
    "sunray",
    "sunshine",
    "dawn",
    "sundown",
  ];

  const natureArray = [
    "wildlife",
    "fauna",
    "habitat",
    "habitats",
    "conservation",
    "animals",
    "birds",
    "animal",
    "flora",
    "livestock",
    "hunting",
    "parks",
    "biota",
    "geese",
    "wilderness",
    "wild",
    "park",
    "natural",
    "nature",
    "hunt",
    "camping",
    "wildcat",
    "sauvage",
    "savage",
    "faun",
    "faune",
    "wild-type",
    "waterfowl",
    "deer",
    "bighorn sheep",
    "ecology",
    "biodiversity",
    "forest",
    "conservancy",
    "bald eagle",
    "wildfowl",
    "endangered species",
    "conservationists",
    "raptors",
    "birdlife",
    "wetlands",
    "otters",
    "elk",
    "fisheries",
    "whitetail deer",
    "bighorn",
    "mule deer",
    "capercaillie",
    "waterbirds",
    "poachers",
    "bird sanctuary",
    "ecosystems",
    "grizzlies",
    "reptiles",
    "naturalists",
    "coyotes",
    "marine",
    "waterways",
    "antelope",
    "cougars",
    "river otter",
    "moose",
    "wildflower",
    "ecotourism",
    "seabird",
    "turtles",
    "vegetation",
    "tortoises",
    "gnatcatchers",
    "wood stork",
    "amphibians",
    "wolves",
    "stone curlew",
    "foxes",
    "timber rattlesnake",
    "sacred ibis",
    "tigers",
    "grizzly bear",
    "monarch butterfly",
    "sandhill crane",
    "desert tortoise",
    "goshawk",
    "cirl bunting",
    "leopards",
    "panther",
    "bobcat",
    "alligators",
    "oilbird",
    "safari park",
    "seafowl",
    "bird of passage",
    "zoography",
    "zoological garden",
    "shore bird",
    "plain wanderer",
    "zoo",
    "deer mouse",
    "mammal",
    "dinotherium",
    "bird",
    "conservationist",
    "gallery forest",
    "zoographer",
    "wetland",
    "zoophagy",
    "predatory animal",
    "bird table",
    "sea cow",
    "anhima",
    "tropical rain forest",
    "sea elephant",
    "sea leopard",
    "aquatic bird",
    "birdwatch",
    "zoopathology",
    "wild dog",
    "marine animal",
    "african elephant",
    "sanctuary",
    "indian elephant",
    "woodland",
    "elephant bird",
    "birdling",
    "birdcatching",
    "prairie wolf",
    "rangership",
    "snail darter",
    "hairbird",
    "zoological",
    "wildgrave",
    "kangaroo rat",
    "exotic",
    "indigenous",
    "aquatic",
    "terrestrial",
    "endangered",
    "migratory",
    "coastal",
    "captive",
    "vertebrate",
    "arctic",
    "threatened",
    "fascinating",
    "nocturnal",
    "mammalian",
    "scenic",
    "endemic",
    "ocean",
    "underwater",
    "winged",
    "amazonian",
    "predatory",
    "fish",
    "plants",
    "forests",
    "forestry",
    "soil",
    "timber",
    "cattle",
    "insects",
    "soils",
    "wildlands",
    "wildflowers",
    "pesticides",
    "fishing",
    "extinction",
    "woods",
    "sanctuaries",
    "ecosystem",
    "elephants",
    "mammals",
    "outdoors",
    "ducks",
    "poaching",
    "harvesting",
    "watersheds",
    "decimation",
    "waterfalls",
    "forage",
    "invertebrates",
    "feeding",
    "extermination",
    "pastoralists",
    "shellfish",
    "whales",
    "buffalo",
    "songbirds",
    "eagles",
    "seals",
    "squirrels",
    "hunted",
    "endanger",
    "depleted",
    "inhabit",
    "exterminated",
    "forest ranger",
    "game warden",
    "gamekeeper",
    "park",
    "natural resources",
    "panda",
    "preservationist",
    "preserved",
    "safari",
    "serengeti",
    "agricultural",
    "biosphere",
    "environmental",
    "freshwater",
    "geriatric",
    "herbivores",
    "wildland",
  ];

  const darknessArray = [
    "armed",
    "attack",
    "bleak",
    "chaos",
    "child soldier",
    "civil war",
    "conflict",
    "crime",
    "crisis",
    "dark continent",
    "darkest",
    "darkness",
    "dead",
    "death",
    "desolate",
    "desperate",
    "devastated",
    "disease",
    "drought",
    "ebola",
    "epidemic",
    "execution",
    "famine",
    "fear",
    "gang",
    "guerilla",
    "gun",
    "gunshot",
    "HIV",
    "hopeless",
    "hunger",
    "kidnap",
    "kidnapped",
    "kill",
    "killed",
    "menace",
    "murder",
    "murdered",
    "murderer",
    "pain",
    "pirate",
    "poor",
    "ransom",
    "rebel",
    "rebellion",
    "refugee",
    "ridden",
    "smuggled weapon",
    "smuggler",
    "starvation",
    "suffer",
    "suffering",
    "violence",
    "war",
    "weapon",
  ];

  // const exceptions = [conflicting, conflicted];

  // const ambiguousWords = [arm, arms, conflicts];

  function hiliter(word, element, tropeClass) {
    var rgxp = new RegExp("\\b" + word + "\\b", "gi"); // g modifier for global and i for case insensitive
    // var repl = `<mark class="${tropeClass}>${word}</mark>`;
    var repl = '<mark class="' + tropeClass + '">' + word + "</mark>";
    element.innerHTML = element.innerHTML.replace(rgxp, repl);

    // rgx for inflections of words
    var rgxpPlural = new RegExp("\\b" + word + "[a-z]*\\b", "gi");

    var rgxMatches = element.innerHTML.match(rgxpPlural);
    // console.log(rgxMatches, typeof rgxMatches);
    // var replPlural = `<mark class="${tropeClass}>${rgxpPlural.match}</mark>`; //check for plural of words
    // for (var match of rgxMatches) {

    // do highlighting if there is/are rgx matches
    if (rgxMatches) {
      for (var i = 0; i < rgxMatches.length; i++) {
        var replPlural =
          '<mark class="' + tropeClass + '">' + rgxMatches[i] + "</mark>"; // highlight words
        element.innerHTML = element.innerHTML.replace(
          rgxMatches[i],
          replPlural
        );
      }
    }
  }

  function hasTrope(trope) {
    return $("mark").classList.contains(trope);
  }

  /*$(function run() {*/

  $("aside").hide();
  $("#resultSummary").hide();
  $("#outputText").hide();
  $("#tropeMessage").hide();

  $("#scanArticle").click(function () {
    var rawInput;
    rawInput = document.getElementById("inputText").value;
    rawInput = rawInput.replace(/\n\r?/g, "<br>");
    $("#outputText").html(rawInput);

    for (var i = 0; i < whitelistArray.length; i++) {
      hiliter(whitelistArray[i], document.getElementById("outputText"), "wl");
    }

    for (var i = 0; i < archaismArray.length; i++) {
      hiliter(archaismArray[i], document.getElementById("outputText"), "arc");
    }
    for (var i = 0; i < tribalismArray.length; i++) {
      hiliter(tribalismArray[i], document.getElementById("outputText"), "trib");
    }
    for (var i = 0; i < corruptionArray.length; i++) {
      hiliter(corruptionArray[i], document.getElementById("outputText"), "cor");
    }
    for (var i = 0; i < darknessArray.length; i++) {
      hiliter(darknessArray[i], document.getElementById("outputText"), "dar");
    }
    for (var i = 0; i < lightArray.length; i++) {
      hiliter(lightArray[i], document.getElementById("outputText"), "lig");
    }
    for (var i = 0; i < generalizationArray.length; i++) {
      hiliter(
        generalizationArray[i],
        document.getElementById("outputText"),
        "gen"
      );
    }
    for (var i = 0; i < natureArray.length; i++) {
      hiliter(natureArray[i], document.getElementById("outputText"), "nat");
    }

    var whitelistedWords = document.getElementsByClassName("wl"); // Find the elements
    var rgxpTropeTag = /gen|arc|cor|trib|nat|lig|dar/i;
    for (var i = 0; i < whitelistedWords.length; i++) {
      whitelistedWords[i].innerHTML = whitelistedWords[i].innerHTML.replace(
        rgxpTropeTag,
        "wl"
      ); // Change the content
    }

    $("#outputText").show();
    $("mark").bind("mousemove", function (e) {
      $("#tropeMessage").css({
        top: e.pageY,
      });
    });

    $("html").click(function (closeMessage) {
      if (!($(closeMessage.target).closest("#tropeMessage").length > 0)) {
        if ($("#tropeMessage").is(":visible")) {
          $("#tropeMessage").hide();
        }
      }
    });

    /* $("#tropeMessage").click(function(){
         if($('#tropeMessage').is(":visible")){
           $("#tropeMessage").hide();
         }
        });*/

    $(".gen").hover(function () {
      $("#tropeMessage").show();
      $("aside").hide();
      $("#generalization").show();
      $("#tropeMessage").css("background-color", "#F4B0A4");
    });

    $(".trib").hover(function () {
      $("#tropeMessage").show();
      $("aside").hide();
      $("#tribalism").show();
      $("#tropeMessage").css("background-color", "#C1BDEF");
    });

    $(".nat").hover(function () {
      $("#tropeMessage").show();
      $("aside").hide();
      $("#tropeMessage").css("background-color", "#a7ffa3");
      $("#nature").show();
    });

    $(".lig").hover(function () {
      $("#tropeMessage").show();
      $("aside").hide();
      $("#tropeMessage").css("background-color", "#fff587");
      $("#light").show();
    });

    $(".dar").hover(function () {
      $("#tropeMessage").show();
      $("aside").hide();
      $("#tropeMessage").css("background-color", "#c4bfbc");
      $("#darkness").show();
    });

    $(".cor").hover(function () {
      $("#tropeMessage").show();
      $("aside").hide();
      $("#tropeMessage").css("background-color", "#a8edea");
      $("#corruption").show();
    });

    $(".arc").hover(function () {
      $("#tropeMessage").show();
      $("aside").hide();
      $("#tropeMessage").css("background-color", "#ffc682");
      $("#archaism").show();
    });

    //location.href = "#scannedResults";

    $("#resultSummary").html(
      "We've found language in your text that might be reinforcing these harmful tropes about Africa:<br>"
    ); //
    if (hasTrope("arc")) {
      $("#resultSummary").append(
        '<span style="font-weight:bold; border-bottom: 3px solid #ffc682">Archaism<br></span>'
      );
      $("#resultSummary").show();
    }
    if (hasTrope("cor")) {
      $("#resultSummary").append(
        '<span style="font-weight:bold; border-bottom: 3px solid #a8edea">Corruption<br></span>'
      );
      $("#resultSummary").show();
    }
    if (hasTrope("dar")) {
      $("#resultSummary").append(
        '<span style="font-weight:bold; border-bottom: 3px solid #c4bfbc">Darkness<br></span>'
      );
      $("#resultSummary").show();
    }
    if (hasTrope("gen")) {
      $("#resultSummary").append(
        '<span style="font-weight:bold; border-bottom: 3px solid #F4B0A4">Generalization<br></span>'
      );
      $("#resultSummary").show();
    }
    if (hasTrope("lig")) {
      $("#resultSummary").append(
        '<span style="font-weight:bold; border-bottom: 3px solid #fff587">Light<br></span>'
      );
      $("#resultSummary").show();
    }
    if (hasTrope("nat")) {
      $("#resultSummary").append(
        '<span style="font-weight:bold; border-bottom: 3px solid #a7ffa3">Nature<br></span>'
      );
      $("#resultSummary").show();
    }
    if (hasTrope("trib")) {
      $("#resultSummary").append(
        '<span style="font-weight:bold; border-bottom: 3px solid #C1BDEF">Tribalism<br></span>'
      );
      $("#resultSummary").show();
    }
    $("#resultSummary").append(
      "<br>Hover your mouse on the highlighted words below to learn more about each stereotype!<br>"
    );
  });

  $("#scanArticle").click(function () {
    $("html,body").animate(
      {
        scrollTop: $(".scrollTo").offset().top,
      },
      "slow"
    );
  });
});
